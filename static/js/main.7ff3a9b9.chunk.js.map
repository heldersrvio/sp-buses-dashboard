{"version":3,"sources":["OlhoVivo.js","components/Filter.js","components/Header.js","components/Footer.js","components/LanesBox.js","components/LinesBox.js","components/SearchBar.js","components/Map.js","App.js","index.js"],"names":["OlhoVivo","baseURL","process","a","fetch","method","mode","response","json","responseData","console","log","fetchVehiclesInformation","setVehicles","finishLoading","status","Error","currentVehicles","setTimeout","l","forEach","line","vs","vehicle","push","prefix","p","accessibility","latitude","py","longitude","px","lineCode","cl","fetchStopsInformation","setStops","currentStops","stop","stopCode","cp","stopName","np","stopAddress","ed","fetchLinesInformation","queryTerm","setLines","currentLines","circular","lc","lineNumericalSignOne","lt","lineNumericalSignTwo","tl","lineOrientation","sl","lineSignPrimary","tp","lineSignSecondary","ts","fetchLanesInformation","setLanes","currentLanes","lane","laneCode","cc","laneName","nc","fetchStopsForLane","setStopsForLane","fetchEstimatedArrivalTimes","update","currentEstimations","stopCoordinates","time","t","vehicleCoordinates","Filter","props","useState","showMap","setShowMap","showLines","setShowLines","showLanes","setShowLanes","buttonClicked","setButtonClicked","filterRef","useRef","useEffect","document","addEventListener","event","current","undefined","contains","target","updateDashboard","toggleFilter","filter","setFilter","id","ref","className","onClick","type","checked","onChange","htmlFor","Header","Footer","loadingSpinner","loading","error","lastUpdateTime","href","src","alt","LanesBox","visibleStops","setVisibleStops","stopsForLanes","setStopsForLanes","updateStops","stops","sFL","newObj","laneList","lanes","map","index","key","vS","includes","c","concat","LinesBox","input","setInput","setCurrentLines","clickedLines","setClickedLines","value","e","cL","SearchBar","currentInput","setCurrentInput","lookUpInfo","setLookUpInfo","searchResultsCards","result","title","updateMap","toUpperCase","info","searchResults","length","placeholder","focus","term","queryInformation","lookUp","Map","routingControl","darkTileLayer","L","tileLayer","attribution","minZoom","maxZoom","subdomains","accessToken","terrainTileLayer","satelliteTileLayer","standardTileLayer","tileSize","zoomOffset","loadEstimatedTimes","busIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","stopIcon","vehicleMarkers","layerGroup","vehicles","marker","draggable","bindPopup","stopMarkers","on","getElementById","baseMaps","Padrão","Escuro","Terreno","Satélite","overlayMaps","addDefaultConfiguration","control","layers","addTo","removeFrom","_container","setView","center","getCenter","zoom","getZoom","remove","currentRoute","getPlan","setWaypoints","latLng","Routing","waypoints","routeWhileDragging","router","routing","mapbox","language","lineOptions","styles","color","opacity","weight","createMarker","i","n","hide","code","stopsWithCode","eachLayer","layer","getLatLng","equals","openPopup","vehiclesWithCode","searchTerm","items","toString","App","setLoading","Date","lastUpdate","setLastUpdate","currentTime","setCurrentTime","setCurrentRoute","dashboardOptions","setDashboardOptions","setError","olhoVivo","updateEstimatedTimes","list","estimatedTimesDiv","textContent","estimation","li","createElement","onclick","appendChild","useCallback","authenticate","interval","setInterval","clearInterval","finishUpdate","Math","floor","getTime","stringifyUpdateInterval","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ff3a9b9.chunk.js","sourcesContent":["const OlhoVivo = () => {\n\tconst baseURL = process.env.REACT_APP_BASE_URL2;\n\n\t(async () => {\n\t\tconst response = await fetch(\n\t\t\tbaseURL +\n\t\t\t\t`Login/Autenticar?token=${process.env.REACT_APP_SPTRANS_API_KEY}`,\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\tmode: 'cors',\n\t\t\t}\n\t\t);\n\t\tconst responseData = await response.json();\n\t\tconsole.log(responseData);\n\t})();\n\n\tconst fetchVehiclesInformation = async (setVehicles, finishLoading) => {\n\t\tconst response = await fetch(baseURL + 'Posicao', {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'cors',\n\t\t});\n\t\tconst responseData = await response.json();\n\t\tif (response.status !== 200 || responseData === null) {\n\t\t\tthrow new Error('Error');\n\t\t}\n\t\tlet currentVehicles = [];\n\t\tsetTimeout(() => {\n\t\t\tresponseData.l.forEach((line) => {\n\t\t\t\tline.vs.forEach((vehicle) => {\n\t\t\t\t\tcurrentVehicles.push({\n\t\t\t\t\t\tprefix: vehicle.p,\n\t\t\t\t\t\taccessibility: vehicle.a,\n\t\t\t\t\t\tlatitude: vehicle.py,\n\t\t\t\t\t\tlongitude: vehicle.px,\n\t\t\t\t\t\tlineCode: line.cl,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetVehicles(currentVehicles);\n\t\t\tfinishLoading();\n\t\t}, 50);\n\t};\n\n\tconst fetchStopsInformation = async (setStops) => {\n\t\tconst response = await fetch(baseURL + 'Parada/Buscar?termosBusca=', {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'cors',\n\t\t});\n\t\tconst responseData = await response.json();\n\t\tif (response.status !== 200 || responseData === null) {\n\t\t\tthrow new Error('Error');\n\t\t}\n\t\tlet currentStops = [];\n\t\tsetTimeout(() => {\n\t\t\tresponseData.forEach((stop) => {\n\t\t\t\tcurrentStops.push({\n\t\t\t\t\tstopCode: stop.cp,\n\t\t\t\t\tstopName: stop.np,\n\t\t\t\t\tstopAddress: stop.ed,\n\t\t\t\t\tlatitude: stop.py,\n\t\t\t\t\tlongitude: stop.px,\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetStops(currentStops);\n\t\t}, 50);\n\t};\n\n\tconst fetchLinesInformation = async (queryTerm, setLines) => {\n\t\tconst response = await fetch(\n\t\t\tbaseURL + `Linha/Buscar?termosBusca=${queryTerm}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\tmode: 'cors',\n\t\t\t}\n\t\t);\n\t\tconst responseData = await response.json();\n\t\tif (response.status !== 200 || responseData === null) {\n\t\t\tthrow new Error('Error');\n\t\t}\n\t\tlet currentLines = [];\n\t\tsetTimeout(() => {\n\t\t\tresponseData.forEach((line) => {\n\t\t\t\tcurrentLines.push({\n\t\t\t\t\tlineCode: line.cl,\n\t\t\t\t\tcircular: line.lc,\n\t\t\t\t\tlineNumericalSignOne: line.lt,\n\t\t\t\t\tlineNumericalSignTwo: line.tl,\n\t\t\t\t\tlineOrientation: line.sl,\n\t\t\t\t\tlineSignPrimary: line.tp,\n\t\t\t\t\tlineSignSecondary: line.ts,\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetLines(currentLines);\n\t\t}, 50);\n\t};\n\n\tconst fetchLanesInformation = async (setLanes) => {\n\t\tconst response = await fetch(baseURL + 'Corredor', {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'cors',\n\t\t});\n\t\tconst responseData = await response.json();\n\t\tif (response.status !== 200 || responseData === null) {\n\t\t\tthrow new Error('Error');\n\t\t}\n\t\tlet currentLanes = [];\n\t\tsetTimeout(() => {\n\t\t\tresponseData.forEach((lane) => {\n\t\t\t\tcurrentLanes.push({\n\t\t\t\t\tlaneCode: lane.cc,\n\t\t\t\t\tlaneName: lane.nc,\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetLanes(currentLanes);\n\t\t}, 50);\n\t};\n\n\tconst fetchStopsForLane = async (laneCode, setStopsForLane) => {\n\t\tconst response = await fetch(\n\t\t\tbaseURL + `Parada/BuscarParadasPorCorredor?codigoCorredor=${laneCode}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\tmode: 'cors',\n\t\t\t}\n\t\t);\n\t\tconst responseData = await response.json();\n\t\tif (response.status !== 200 || responseData === null) {\n\t\t\tthrow new Error('Error');\n\t\t}\n\t\tlet currentStops = [];\n\t\tresponseData.forEach((stop) => {\n\t\t\tcurrentStops.push({\n\t\t\t\tstopName: stop.np,\n\t\t\t\tstopAddress: stop.ed,\n\t\t\t});\n\t\t});\n\t\tsetStopsForLane(laneCode, currentStops);\n\t};\n\n\tconst fetchEstimatedArrivalTimes = async (stopCode, update) => {\n\t\tconst response = await fetch(\n\t\t\tbaseURL + `Previsao/Parada?codigoParada=${stopCode}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\tmode: 'cors',\n\t\t\t}\n\t\t);\n\t\tconst responseData = await response.json();\n\t\tif (response.status !== 200 || responseData === null) {\n\t\t\tthrow new Error('Error');\n\t\t}\n\t\tlet currentEstimations = [];\n\t\tconst stopCoordinates = [responseData.p.py, responseData.p.px];\n\t\tresponseData.p.l.forEach((line) => {\n\t\t\tline.vs.forEach((vehicle) => {\n\t\t\t\tcurrentEstimations.push({\n\t\t\t\t\tprefix: vehicle.p,\n\t\t\t\t\ttime: vehicle.t,\n\t\t\t\t\tvehicleCoordinates: [vehicle.py, vehicle.px],\n\t\t\t\t\tstopCoordinates,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tupdate(stopCode, currentEstimations);\n\t};\n\n\treturn {\n\t\tfetchVehiclesInformation,\n\t\tfetchStopsInformation,\n\t\tfetchLanesInformation,\n\t\tfetchLinesInformation,\n\t\tfetchStopsForLane,\n\t\tfetchEstimatedArrivalTimes,\n\t};\n};\n\nexport default OlhoVivo;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Filter.css';\n\nconst Filter = (props) => {\n\tconst [showMap, setShowMap] = useState(true);\n\tconst [showLines, setShowLines] = useState(true);\n\tconst [showLanes, setShowLanes] = useState(true);\n\tconst [buttonClicked, setButtonClicked] = useState(false);\n\tconst filterRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', (event) => {\n\t\t\tif (\n\t\t\t\tfilterRef.current !== null &&\n\t\t\t\tfilterRef.current !== undefined &&\n\t\t\t\t!filterRef.current.contains(event.target)\n\t\t\t) {\n\t\t\t\tsetButtonClicked(false);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst updateDashboard = props.updateDashboard;\n\t\tupdateDashboard({\n\t\t\tshowLines,\n\t\t\tshowLanes,\n\t\t\tshowMap,\n\t\t});\n\t}, [showLines, showLanes, showMap, props.updateDashboard]);\n\n\tconst toggleFilter = (filter, setFilter) => {\n\t\tsetFilter(!filter);\n\t};\n\n\treturn (\n\t\t<div id=\"filter\" ref={filterRef}>\n\t\t\t<button\n\t\t\t\tid=\"filter-button\"\n\t\t\t\tclassName={buttonClicked ? 'selected' : ''}\n\t\t\t\tonClick={() => setButtonClicked(!buttonClicked)}\n\t\t\t></button>\n\t\t\t<ul\n\t\t\t\tid=\"filter-drop-down\"\n\t\t\t\tclassName={buttonClicked ? 'visible' : 'hidden'}\n\t\t\t>\n\t\t\t\t<li className={'filter-option'}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"filter-lines\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={showLines}\n\t\t\t\t\t\tonChange={() => toggleFilter(showLines, setShowLines)}\n\t\t\t\t\t></input>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor=\"filter-lines\"\n\t\t\t\t\t\tclassName={showLines ? 'active' : 'inactive'}\n\t\t\t\t\t>\n\t\t\t\t\t\tExibir linhas\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t\t<li className={'filter-option'}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"filter-lanes\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={showLanes}\n\t\t\t\t\t\tonChange={() => toggleFilter(showLanes, setShowLanes)}\n\t\t\t\t\t></input>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor=\"filter-lanes\"\n\t\t\t\t\t\tclassName={showLanes ? 'active' : 'inactive'}\n\t\t\t\t\t>\n\t\t\t\t\t\tExibir corredores\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t\t<li className={'filter-option'}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"filter-map\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={showMap}\n\t\t\t\t\t\tonChange={() => toggleFilter(showMap, setShowMap)}\n\t\t\t\t\t></input>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor=\"filter-map\"\n\t\t\t\t\t\tclassName={showMap ? 'active' : 'inactive'}\n\t\t\t\t\t>\n\t\t\t\t\t\tExibir mapa\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nFilter.propTypes = {\n\tupdateDashboard: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filter from './Filter';\nimport './styles/Header.css';\n\nconst Header = (props) => {\n\treturn (\n\t\t<div id=\"header-bar\">\n\t\t\t<h1>Ônibus SP</h1>\n\t\t\t<div id=\"filter-container\">\n\t\t\t\t<Filter updateDashboard={props.updateDashboard} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nHeader.propTypes = {\n\tupdateDashboard: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Footer.css';\n\nconst Footer = (props) => {\n\tconst loadingSpinner = (\n\t\t<div className=\"loading-spinner\">\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div id=\"footer\">\n\t\t\t{props.loading ? (\n\t\t\t\tloadingSpinner\n\t\t\t) : props.error ? (\n\t\t\t\t<span id=\"error-message\">Erro. Não foi possível obter os dados.</span>\n\t\t\t) : (\n\t\t\t\t<span>Última atualização: {props.lastUpdateTime}</span>\n\t\t\t)}\n\t\t\t<div id=\"footer-links\">\n\t\t\t\t<span id=\"created-span\">Created by Helder Sérvio using React</span>\n\t\t\t\t<a id=\"twitter-link\" href=\"https://twitter.com/HelderServio\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://icons-for-free.com/iconfiles/png/512/logo+media+social+social+media+twitter+icon-1320194988353055127.png\"\n\t\t\t\t\t\talt=\"Twitter bird\"\n\t\t\t\t\t></img>\n\t\t\t\t</a>\n\t\t\t\t<a id=\"github-link\" href=\"https://github.com/heldersrvio\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://cdn.iconscout.com/icon/free/png-512/github-136-458293.png\"\n\t\t\t\t\t\talt=\"Github cat\"\n\t\t\t\t\t></img>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nFooter.propTypes = {\n\tloading: PropTypes.bool,\n\terror: PropTypes.bool,\n\tlastUpdateTime: PropTypes.string,\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/LanesBox.css';\n\nconst LanesBox = (props) => {\n\tconst [visibleStops, setVisibleStops] = useState([]);\n\tconst [stopsForLanes, setStopsForLanes] = useState({});\n\n\tconst updateStops = (laneCode, stops) => {\n\t\tsetStopsForLanes((sFL) => {\n\t\t\tconst newObj = { ...sFL };\n\t\t\tnewObj[laneCode] = stops;\n\t\t\treturn newObj;\n\t\t});\n\t};\n\n\tconst laneList = props.lanes.map((lane, index) => {\n\t\treturn (\n\t\t\t<li className=\"lane-li\" key={index}>\n\t\t\t\t<span className=\"lane-name\">\n\t\t\t\t\t{lane.laneName}{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"show-stops\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsetVisibleStops((vS) => {\n\t\t\t\t\t\t\t\tif (vS.includes(lane.laneCode)) {\n\t\t\t\t\t\t\t\t\treturn vS.filter((c) => c !== lane.laneCode);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (stopsForLanes[lane.laneCode] === undefined) {\n\t\t\t\t\t\t\t\t\t\tprops.fetchStopsForLane(lane.laneCode, updateStops);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn vS.concat(lane.laneCode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{visibleStops.includes(lane.laneCode)\n\t\t\t\t\t\t\t? 'Ocultar paradas ▼'\n\t\t\t\t\t\t\t: 'Mostrar paradas ▶'}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t\t<ul\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tvisibleStops.includes(lane.laneCode)\n\t\t\t\t\t\t\t? 'lane-stops-ul visible'\n\t\t\t\t\t\t\t: 'lane-stops-ul'\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{stopsForLanes[lane.laneCode] !== undefined\n\t\t\t\t\t\t? stopsForLanes[lane.laneCode].map((stop, index) => (\n\t\t\t\t\t\t\t\t<li key={'stop' + index + stop.stopCode}>{stop.stopName}</li>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: null}\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div id=\"lanes-box-container\">\n\t\t\t<h2 id=\"lanes-h2\">Corredores</h2>\n\t\t\t<ul id=\"lanes-ul\">{laneList}</ul>\n\t\t</div>\n\t);\n};\n\nLanesBox.propTypes = {\n\tlanes: PropTypes.arrayOf(\n\t\tPropTypes.exact({\n\t\t\tlaneCode: PropTypes.number,\n\t\t\tlaneName: PropTypes.string,\n\t\t})\n\t),\n\tfetchStopsForLane: PropTypes.func,\n};\n\nexport default LanesBox;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/LinesBox.css';\n\nconst LinesBox = (props) => {\n\tconst [input, setInput] = useState('');\n\tconst [currentLines, setCurrentLines] = useState([]);\n\tconst [clickedLines, setClickedLines] = useState([]);\n\n\tconst mapLineToElement = (line) => {\n\t\treturn (\n\t\t\t<li key={line.lineCode} className=\"lines-box-result\">\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"lines-box-result-terminal\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetClickedLines((cL) => {\n\t\t\t\t\t\t\tif (cL.includes(line.lineCode)) {\n\t\t\t\t\t\t\t\treturn cL.filter((c) => c !== line.lineCode);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn cL.concat(line.lineCode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{line.lineSignPrimary + ' ' + line.lineSignSecondary}{' '}\n\t\t\t\t\t{clickedLines.includes(line.lineCode) ? '▼' : '▶'}\n\t\t\t\t</span>\n\t\t\t\t<ul\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tclickedLines.includes(line.lineCode)\n\t\t\t\t\t\t\t? 'lines-box-result-details visible'\n\t\t\t\t\t\t\t: 'lines-box-result-details hidden'\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<b>Código:</b> {line.lineCode}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<b>{line.circular ? 'Circular' : 'Não circular'}</b>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<b>Letreiro:</b>{' '}\n\t\t\t\t\t\t{line.lineNumericalSignOne + ' ' + line.lineNumericalSignTwo}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<b>{line.lineNumericalSignTwo === 10 ? 'Base' : 'Atendimento'}</b>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<b>Sentido:</b>{' '}\n\t\t\t\t\t\t{line.lineOrientation === 1\n\t\t\t\t\t\t\t? 'Terminal principal para secundário'\n\t\t\t\t\t\t\t: 'Terminal secundário para principal'}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div id=\"lines-box-container\">\n\t\t\t<div id=\"lines-box-top\">\n\t\t\t\t<h2 id=\"lines-h2\">Linhas</h2>\n\t\t\t\t<input\n\t\t\t\t\tid=\"lines-box-text-input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetInput(e.target.value);\n\t\t\t\t\t\tprops.fetchLinesInformation(e.target.value, setCurrentLines);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ul id=\"lines-box-results\">\n\t\t\t\t{input === '' ? null : currentLines.map(mapLineToElement)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nLinesBox.propTypes = {\n\tfetchLinesInformation: PropTypes.func,\n};\n\nexport default LinesBox;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/SearchBar.css';\n\nconst SearchBar = (props) => {\n\tconst [currentInput, setCurrentInput] = useState('');\n\tconst [lookUpInfo, setLookUpInfo] = useState([]);\n\tconst input = useRef(null);\n\n\tconst lookUp = (term) => {\n\t\tconst result = props.queryInformation(term);\n\t\tsetLookUpInfo(result);\n\t};\n\n\tconst searchResultsCards = lookUpInfo.map((result) => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"search-result-card\"\n\t\t\t\tkey={`search-result-card-${result.title}`}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetCurrentInput('');\n\t\t\t\t\tprops.updateMap(result.title);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"search-results-card-left-section\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"search-result-icon\"\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tresult.type === 'ônibus'\n\t\t\t\t\t\t\t\t? 'https://image.flaticon.com/icons/png/512/171/171255.png'\n\t\t\t\t\t\t\t\t: 'http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/1024/42561-bus-stop-icon.png'\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={result.type === 'ônibus' ? 'Veículo' : 'Parada'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-results-card-right-section\">\n\t\t\t\t\t<span className=\"search-result-title\">\n\t\t\t\t\t\t{result.type.toUpperCase() + ' ' + result.title}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"search-result-info\">{result.info}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t});\n\n\tconst searchResults =\n\t\tlookUpInfo.length === 0 ? (\n\t\t\t<span id=\"no-results-message\">Sem resultados</span>\n\t\t) : (\n\t\t\tsearchResultsCards\n\t\t);\n\n\treturn (\n\t\t<div id=\"search-bar\">\n\t\t\t<div id=\"top-section\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"search-bar-input\"\n\t\t\t\t\tplaceholder=\"Procurar ônibus e paradas\"\n\t\t\t\t\tvalue={currentInput}\n\t\t\t\t\tref={input}\n\t\t\t\t\tonClick={() => input.current.focus()}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetCurrentInput(e.target.value);\n\t\t\t\t\t\tlookUp(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t></input>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tid=\"search-results\"\n\t\t\t\tclassName={currentInput !== '' ? 'visible' : 'hidden'}\n\t\t\t>\n\t\t\t\t{searchResults}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nSearchBar.propTypes = {\n\tupdateMap: PropTypes.func,\n\tqueryInformation: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React, { useEffect, useRef } from 'react';\nimport SearchBar from './SearchBar';\nimport PropTypes from 'prop-types';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport './styles/Map.css';\n\nconst Map = (props) => {\n\tconst map = useRef(null);\n\tconst routingControl = useRef(null);\n\n\tconst focusOnMarker = (code) => {\n\t\tif (map !== null && map.current !== undefined) {\n\t\t\tconst stopsWithCode = props.stops.filter(\n\t\t\t\t(stop) => stop.stopCode === code\n\t\t\t);\n\t\t\tif (stopsWithCode.length > 0) {\n\t\t\t\tmap.current.setView(\n\t\t\t\t\t[stopsWithCode[0].latitude, stopsWithCode[0].longitude],\n\t\t\t\t\t17\n\t\t\t\t);\n\t\t\t\tmap.current.eachLayer((layer) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tlayer.getLatLng !== undefined &&\n\t\t\t\t\t\tlayer\n\t\t\t\t\t\t\t.getLatLng()\n\t\t\t\t\t\t\t.equals([stopsWithCode[0].latitude, stopsWithCode[0].longitude])\n\t\t\t\t\t) {\n\t\t\t\t\t\tlayer.openPopup();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log(code);\n\t\t\tconst vehiclesWithCode = props.vehicles.filter(\n\t\t\t\t(vehicle) => vehicle.prefix === code\n\t\t\t);\n\t\t\tif (vehiclesWithCode.length > 0) {\n\t\t\t\tmap.current.setView(\n\t\t\t\t\t[vehiclesWithCode[0].latitude, vehiclesWithCode[0].longitude],\n\t\t\t\t\t17\n\t\t\t\t);\n\t\t\t\tmap.current.eachLayer((layer) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tlayer.getLatLng !== undefined &&\n\t\t\t\t\t\tlayer\n\t\t\t\t\t\t\t.getLatLng()\n\t\t\t\t\t\t\t.equals([\n\t\t\t\t\t\t\t\tvehiclesWithCode[0].latitude,\n\t\t\t\t\t\t\t\tvehiclesWithCode[0].longitude,\n\t\t\t\t\t\t\t])\n\t\t\t\t\t) {\n\t\t\t\t\t\tlayer.openPopup();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t};\n\n\tconst queryInformation = (searchTerm) => {\n\t\tlet items = [];\n\t\tconst term = searchTerm.toUpperCase();\n\t\tif (term === '') {\n\t\t\treturn items;\n\t\t}\n\t\tfor (let i = 0; i < props.stops.length; i++) {\n\t\t\tif (\n\t\t\t\tprops.stops[i].stopCode.toString().includes(term) ||\n\t\t\t\tprops.stops[i].stopName.toString().includes(term)\n\t\t\t) {\n\t\t\t\titems.push({\n\t\t\t\t\ttitle: props.stops[i].stopCode,\n\t\t\t\t\ttype: 'parada',\n\t\t\t\t\tinfo: props.stops[i].stopName,\n\t\t\t\t});\n\t\t\t\tif (items.length === 5) {\n\t\t\t\t\treturn items;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < props.vehicles.length; i++) {\n\t\t\tif (props.vehicles[i].prefix.toString().includes(term)) {\n\t\t\t\titems.push({\n\t\t\t\t\ttitle: props.vehicles[i].prefix,\n\t\t\t\t\ttype: 'ônibus',\n\t\t\t\t\tinfo: '',\n\t\t\t\t});\n\t\t\t\tif (items.length === 5) {\n\t\t\t\t\treturn items;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t};\n\n\tuseEffect(() => {\n\t\tconst darkTileLayer = L.tileLayer(\n\t\t\t'https://{s}.tile.jawg.io/jawg-matrix/{z}/{x}/{y}{r}.png?access-token={accessToken}',\n\t\t\t{\n\t\t\t\tattribution:\n\t\t\t\t\t'<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\t\tminZoom: 0,\n\t\t\t\tmaxZoom: 22,\n\t\t\t\tsubdomains: 'abcd',\n\t\t\t\taccessToken: process.env.REACT_APP_JAWG_API_KEY,\n\t\t\t}\n\t\t);\n\t\tconst terrainTileLayer = L.tileLayer(\n\t\t\t'https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png',\n\t\t\t{\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n\t\t\t}\n\t\t);\n\t\tconst satelliteTileLayer = L.tileLayer(\n\t\t\t'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n\t\t\t{\n\t\t\t\tattribution:\n\t\t\t\t\t'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n\t\t\t}\n\t\t);\n\t\tconst standardTileLayer = L.tileLayer(\n\t\t\t'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}',\n\t\t\t{\n\t\t\t\tattribution:\n\t\t\t\t\t'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tid: 'mapbox/streets-v11',\n\t\t\t\ttileSize: 512,\n\t\t\t\tzoomOffset: -1,\n\t\t\t\taccessToken: process.env.REACT_APP_MAPBOX_API_KEY,\n\t\t\t}\n\t\t);\n\n\t\tconst loadEstimatedTimes = props.loadEstimatedTimes;\n\n\t\tconst busIcon = L.icon({\n\t\t\ticonUrl: 'https://image.flaticon.com/icons/png/512/171/171255.png',\n\t\t\ticonSize: [38, 38],\n\t\t\ticonAnchor: [10, 19],\n\t\t\tpopupAnchor: [9, -19],\n\t\t});\n\n\t\tconst stopIcon = L.icon({\n\t\t\ticonUrl:\n\t\t\t\t'http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/1024/42561-bus-stop-icon.png',\n\t\t\ticonSize: [38, 38],\n\t\t\ticonAnchor: [10, 19],\n\t\t\tpopupAnchor: [9, -19],\n\t\t});\n\n\t\tconst vehicleMarkers = L.layerGroup(\n\t\t\tprops.vehicles.map((vehicle) => {\n\t\t\t\tconst marker = L.marker([vehicle.latitude, vehicle.longitude], {\n\t\t\t\t\tdraggable: false,\n\t\t\t\t\ticon: busIcon,\n\t\t\t\t});\n\t\t\t\tmarker.bindPopup(\n\t\t\t\t\t`<b>Ônibus ${vehicle.prefix}</b><br>Linha ${vehicle.lineCode}<br>${\n\t\t\t\t\t\tvehicle.accessibility\n\t\t\t\t\t\t\t? 'Acessível para pessoas com deficiência'\n\t\t\t\t\t\t\t: 'Não acessível para pessoas com deficiência'\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t\treturn marker;\n\t\t\t})\n\t\t);\n\n\t\tconst stopMarkers = L.layerGroup(\n\t\t\tprops.stops.map((stop) => {\n\t\t\t\tconst marker = L.marker([stop.latitude, stop.longitude], {\n\t\t\t\t\tdraggable: false,\n\t\t\t\t\ticon: stopIcon,\n\t\t\t\t});\n\t\t\t\tmarker.bindPopup(\n\t\t\t\t\t`<b>Parada ${stop.stopName}</b><br>Endereço: ${stop.stopAddress}<br><button id=\"button-${stop.stopCode}\" class=\"show-estimated-time-button\">Mostrar previsões de chegada</button><ul id=\"estimations-${stop.stopCode}\"></ul>`\n\t\t\t\t);\n\t\t\t\tmarker.on('click', (e) => {\n\t\t\t\t\tdocument\n\t\t\t\t\t\t.getElementById(`button-${stop.stopCode}`)\n\t\t\t\t\t\t.addEventListener('click', (e) =>\n\t\t\t\t\t\t\tloadEstimatedTimes(stop.stopCode)\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn marker;\n\t\t\t})\n\t\t);\n\n\t\tconst baseMaps = {\n\t\t\tPadrão: standardTileLayer,\n\t\t\tEscuro: darkTileLayer,\n\t\t\tTerreno: terrainTileLayer,\n\t\t\tSatélite: satelliteTileLayer,\n\t\t};\n\n\t\tconst overlayMaps = {\n\t\t\t'Exibir veículos': vehicleMarkers,\n\t\t\t'Exibir paradas': stopMarkers,\n\t\t};\n\n\t\tconst addDefaultConfiguration = () => {\n\t\t\tL.control.layers(baseMaps, overlayMaps).addTo(map.current);\n\t\t\tif (\n\t\t\t\troutingControl.current !== null &&\n\t\t\t\troutingControl.current !== undefined\n\t\t\t) {\n\t\t\t\troutingControl.current.removeFrom(map.current);\n\t\t\t}\n\t\t};\n\n\t\tif (map.current._container === undefined) {\n\t\t\tmap.current = L.map('mapid', {\n\t\t\t\tlayers: [standardTileLayer, vehicleMarkers, stopMarkers],\n\t\t\t}).setView([-23.542271, -46.636823], 15);\n\t\t\taddDefaultConfiguration();\n\t\t} else {\n\t\t\tconst center = map.current.getCenter();\n\t\t\tconst zoom = map.current.getZoom();\n\t\t\tmap.current.remove();\n\t\t\tmap.current = L.map('mapid', {\n\t\t\t\tlayers: [standardTileLayer, vehicleMarkers, stopMarkers],\n\t\t\t}).setView(center, zoom);\n\t\t\taddDefaultConfiguration();\n\t\t}\n\t}, [props.vehicles, props.stops, props.loadEstimatedTimes]);\n\n\tuseEffect(() => {\n\t\tif (props.currentRoute.length > 0) {\n\t\t\tif (\n\t\t\t\troutingControl.current !== null &&\n\t\t\t\troutingControl.current !== undefined\n\t\t\t) {\n\t\t\t\troutingControl.current\n\t\t\t\t\t.getPlan()\n\t\t\t\t\t.setWaypoints([\n\t\t\t\t\t\tL.latLng(props.currentRoute[0]),\n\t\t\t\t\t\tL.latLng(props.currentRoute[1]),\n\t\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\troutingControl.current = L.Routing.control({\n\t\t\t\t\twaypoints: [\n\t\t\t\t\t\tL.latLng(props.currentRoute[0]),\n\t\t\t\t\t\tL.latLng(props.currentRoute[1]),\n\t\t\t\t\t],\n\t\t\t\t\trouteWhileDragging: true,\n\t\t\t\t\trouter: L.routing.mapbox(process.env.REACT_APP_MAPBOX_API_KEY, {\n\t\t\t\t\t\tlanguage: 'pt-BR',\n\t\t\t\t\t}),\n\t\t\t\t\tlineOptions: {\n\t\t\t\t\t\tstyles: [{ color: 'red', opacity: 1, weight: 9 }],\n\t\t\t\t\t},\n\t\t\t\t\tcreateMarker: (i, n) => null,\n\t\t\t\t});\n\t\t\t\troutingControl.current.addTo(map.current);\n\t\t\t}\n\t\t\troutingControl.current.hide();\n\t\t}\n\t}, [props.currentRoute]);\n\n\treturn (\n\t\t<div id=\"mapid\" ref={map}>\n\t\t\t<SearchBar\n\t\t\t\tupdateMap={focusOnMarker}\n\t\t\t\tqueryInformation={queryInformation}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nMap.propTypes = {\n\tvehicles: PropTypes.arrayOf(\n\t\tPropTypes.exact({\n\t\t\tprefix: PropTypes.number,\n\t\t\taccessibility: PropTypes.bool,\n\t\t\tlatitude: PropTypes.number,\n\t\t\tlongitude: PropTypes.number,\n\t\t\tlineCode: PropTypes.number,\n\t\t})\n\t),\n\tstops: PropTypes.arrayOf(\n\t\tPropTypes.exact({\n\t\t\tstopCode: PropTypes.number,\n\t\t\tstopName: PropTypes.string,\n\t\t\tstopAddress: PropTypes.string,\n\t\t\tlatitude: PropTypes.number,\n\t\t\tlongitude: PropTypes.number,\n\t\t})\n\t),\n\tcurrentRoute: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n\tloadEstimatedTimes: PropTypes.func,\n};\n\nexport default Map;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport OlhoVivo from './OlhoVivo';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport LanesBox from './components/LanesBox';\nimport LinesBox from './components/LinesBox';\nimport Map from './components/Map';\nimport './styles/App.css';\n\nconst App = () => {\n\tconst [vehicles, setVehicles] = useState([]);\n\tconst [stops, setStops] = useState([]);\n\tconst [lanes, setLanes] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [lastUpdate, setLastUpdate] = useState(new Date());\n\tconst [currentTime, setCurrentTime] = useState(new Date());\n\tconst [currentRoute, setCurrentRoute] = useState([]);\n\tconst [dashboardOptions, setDashboardOptions] = useState({\n\t\tshowLines: true,\n\t\tshowLanes: true,\n\t\tshowMap: true,\n\t});\n\tconst [error, setError] = useState(false);\n\n\tconst olhoVivo = useRef(null);\n\n\tconst updateEstimatedTimes = (stopCode, list) => {\n\t\tconst estimatedTimesDiv = document.getElementById(\n\t\t\t`estimations-${stopCode}`\n\t\t);\n\t\testimatedTimesDiv.textContent = '';\n\t\tif (estimatedTimesDiv !== null) {\n\t\t\tlist.forEach((estimation) => {\n\t\t\t\tconst li = document.createElement('li');\n\t\t\t\tli.textContent = `Previsão para veículo ${estimation.prefix}: ${estimation.time}`;\n\t\t\t\tli.onclick = () => {\n\t\t\t\t\tsetCurrentRoute([\n\t\t\t\t\t\testimation.vehicleCoordinates,\n\t\t\t\t\t\testimation.stopCoordinates,\n\t\t\t\t\t]);\n\t\t\t\t};\n\t\t\t\testimatedTimesDiv.appendChild(li);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst loadEstimatedTimes = useCallback((stopCode) => {\n\t\tif (olhoVivo.current.authenticate) {\n\t\t\tolhoVivo.current.fetchEstimatedArrivalTimes(\n\t\t\t\tstopCode,\n\t\t\t\tupdateEstimatedTimes\n\t\t\t);\n\t\t}\n\t}, []);\n\n\tconst stringifyUpdateInterval = () => {\n\t\tswitch (\n\t\t\tMath.floor((currentTime.getTime() - lastUpdate.getTime()) / 60000)\n\t\t) {\n\t\t\tcase 0:\n\t\t\t\treturn 'menos de 1 minuto';\n\t\t\tcase 1:\n\t\t\t\treturn '1 minuto';\n\t\t\tcase 2:\n\t\t\t\treturn '2 minutos';\n\t\t\tcase 3:\n\t\t\t\treturn '3 minutos';\n\t\t\tdefault:\n\t\t\t\treturn '4 minutos';\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetCurrentTime(new Date());\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tolhoVivo.current = OlhoVivo();\n\n\t\tconst finishUpdate = () => {\n\t\t\tsetLoading(false);\n\t\t\tsetLastUpdate(new Date());\n\t\t\tsetCurrentTime(new Date());\n\t\t};\n\n\t\tconst update = async () => {\n\t\t\tfor (let i = 0; i < 5; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tawait olhoVivo.current.fetchStopsInformation(setStops);\n\t\t\t\t\tawait olhoVivo.current.fetchLanesInformation(setLanes);\n\t\t\t\t\tawait olhoVivo.current.fetchVehiclesInformation(\n\t\t\t\t\t\tsetVehicles,\n\t\t\t\t\t\tfinishUpdate\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (i === 4) {\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tsetError(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst interval = setInterval(() => {\n\t\t\tupdate();\n\t\t}, 300000);\n\n\t\tupdate();\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header updateDashboard={setDashboardOptions} />\n\t\t\t<div id=\"dashboard\">\n\t\t\t\t{dashboardOptions.showLines || dashboardOptions.showLanes ? (\n\t\t\t\t\t<div id=\"left-section\">\n\t\t\t\t\t\t{dashboardOptions.showLines ? (\n\t\t\t\t\t\t\t<LinesBox\n\t\t\t\t\t\t\t\tfetchLinesInformation={\n\t\t\t\t\t\t\t\t\tolhoVivo.current !== null\n\t\t\t\t\t\t\t\t\t\t? olhoVivo.current.fetchLinesInformation\n\t\t\t\t\t\t\t\t\t\t: () => {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{dashboardOptions.showLanes ? (\n\t\t\t\t\t\t\t<LanesBox\n\t\t\t\t\t\t\t\tlanes={lanes}\n\t\t\t\t\t\t\t\tfetchStopsForLane={\n\t\t\t\t\t\t\t\t\tolhoVivo.current !== null\n\t\t\t\t\t\t\t\t\t\t? olhoVivo.current.fetchStopsForLane\n\t\t\t\t\t\t\t\t\t\t: () => {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t{dashboardOptions.showMap ? (\n\t\t\t\t\t<div id=\"right-section\">\n\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\tvehicles={vehicles}\n\t\t\t\t\t\t\tstops={stops}\n\t\t\t\t\t\t\tcurrentRoute={currentRoute}\n\t\t\t\t\t\t\tloadEstimatedTimes={loadEstimatedTimes}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<Footer\n\t\t\t\tloading={loading}\n\t\t\t\terror={error}\n\t\t\t\tlastUpdateTime={stringifyUpdateInterval()}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}